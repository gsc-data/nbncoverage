{"version":3,"sources":["components/barChart.js","components/Legend.js","components/rightBar.js","components/UniversityAccessMap.js","App.js","reportWebVitals.js","index.js"],"names":["LEGEND_COLORS","Best","Good","Intermediate","Others","BAR_COLORS_BACKGROUND","key","join","BAR_COLORS_FILL","data","datasets","map","row","k","split","label","backgroundColor","borderColor","borderWidth","Chart","register","ChartDataLabels","options","indexAxis","maintainAspectRatio","elements","bar","responsive","scales","x","ticks","callback","value","index","values","yAxes","font","weight","tick","plugins","datalabels","formatter","context","Math","round","anchor","align","size","color","dataset","slice","length","elm","parseInt","r","g","b","legend","display","BarChart","style","height","LEGEND_LABELS","Legend","id","fontFamily","className","Object","keys","RightBar","marginTop","fontSize","href","lineHeight","INITIAL_VIEW_STATE","latitude","longitude","zoom","setDefaultCredentials","username","apiKey","AccessMap","useState","setData","query","useEffect","a","axios","get","encodeURIComponent","response","rows","district","y","text","position","getData","console","log","texLayer","TextLayer","pickable","sizeMinPixels","sizeMaxPixels","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getBackgroundColor","layerAccess","CartoLayer","type","MAP_TYPES","QUERY","getFillColor","object","properties","quality","getLineColor","lineWidthMinPixels","layerDistrict","width","initialViewState","getTooltip","html","controller","layers","reuseMaps","mapStyle","BASEMAP","PRISTON","mapboxApiAccessToken","preventStyleDiffing","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcc5bb55.chunk.js","sourcesContent":["\nimport React  from 'react';\nimport { Bar,Chart } from \"react-chartjs-2\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport data from './data.json'\n\n//git remote add origin https://github.com/gsc-data/university-pt-access.git\nexport const LEGEND_COLORS = {\n  Best: [127,201,127],\n  Good:[190,174,212],\n  Intermediate: [253,192,134],\n  Others:[255,255,153],\n};\nconst BAR_COLORS_BACKGROUND ={};\n\n\nfor (let key in LEGEND_COLORS){\n  BAR_COLORS_BACKGROUND[key] = `rgba(${LEGEND_COLORS[key].join()},1)`\n\n};\n\nconst BAR_COLORS_FILL ={};\n\nfor (let key in LEGEND_COLORS){\n  BAR_COLORS_FILL[key] = `rgba(${LEGEND_COLORS[key].join()},0.9)`\n\n};\n\n\ndata.datasets = data.datasets.map( row =>{\n  let k = row['label'].split(\" \")[0]\n  //console.log(k);\n    return {...row,label:`${row.label} \\(%\\)`,backgroundColor:BAR_COLORS_FILL[k],borderColor:BAR_COLORS_BACKGROUND[k],borderWidth:1}\n});\n\nChart.register(ChartDataLabels)\nconst options = {\n        \n  indexAxis: 'y',\n  maintainAspectRatio: false,\n\n  \n\n  elements: {\n    bar: {\n      borderWidth: 1,\n    }\n  },\n  responsive: true,\n  \n  scales: {\n    x: {\n        ticks: {\n            // Include a dollar sign in the ticks\n            callback: function(value, index, values) {\n                return   value +'%';\n            }\n        }\n    },\n    yAxes: {\n      ticks: {\n          // Include a dollar sign in the ticks\n          // callback: function(value, index, values) {\n          //     return `<b>${this.getLabelForValue(value)}</b>`;\n          // },\n          font: {\n           \n    \n            weight:  function(value){\n              const {tick} = value;\n              //console.log(tick);\n              return tick.label==='Greater Sydney'?\"bold\":\"normal\";\n            }\n     \n          },\n      }\n  }\n}\n\n  ,\n  plugins: {\n    datalabels:{\n      formatter: function(value, context) {\n        return  value>10? Math.round(value,0) + '%':'';\n      },\n      anchor:'end',\n      align :'start',\n      font: {\n        size: '8px',\n        weight:'bold'\n      },\n      color: function(context){\n        const backgroundColor = context.dataset.backgroundColor\n        const [r,g,b] = backgroundColor.slice(5,backgroundColor.length-5).split(',').map(elm=>parseInt(elm))\n        const factor =.5;\n        //console.log(r);\n  \n        const newColor= `rgb(${Math.round(r*factor,0)},${Math.round(g*factor,0)},${Math.round(b*factor,0)})`;\n        //console.log(newColor);\n        return newColor\n      }\n    },\n\n    legend:{\n      display:false\n\n  },\n\n  }\n  \n\n};\n\n\n\n\n\nconst BarChart = () => {\n\n    \n    return ( \n        <div style = {{height:'400px'}}>\n        <Bar data = {data} options ={options} />\n        </div>\n\n    )\n\n            \n            \n}\n   \n\nexport default BarChart;\n\n\n\n","import React from 'react';\nimport { LEGEND_COLORS } from './barChart';\nimport './Legend.css'\n\n\nconst LEGEND_LABELS = {\n    Best: 'Fibre to the premises',\n    Good:'Fibre to the building and Fibre to the curb',\n    Intermediate:'Fibre to the Node',\n    Others:'Hybrid fibre coaxial, Fixed-wireless and Satellite '\n\n};\n\nconst Legend = () => {\n\n   \n\n    return (\n        <>\n     <div id=\"legend\" style ={{fontFamily:\"Roboto, sans-serif\"}}>\n\n         <h4> LEGEND</h4>\n\n   \n      \n      <div className=\"legend-content\">\n          {/* <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_YES.join() })`}}></div>Yes</li> */}\n          { Object.keys(LEGEND_COLORS).map(key=>{\n\n            return <li> <div className='circle' style={{backgroundColor:`rgba(${ LEGEND_COLORS[key].join() })`}}></div>{LEGEND_LABELS[key]}</li>\n\n          })}\n    \n      \n          \n      </div>\n    </div>\n        </>\n    )\n};\n\nexport default Legend;","import React from 'react';\n\nimport './RightBar.css';\n\nimport BarChart   from './barChart';\nimport Legend from './Legend';\n\n\n\n\n\nconst RightBar = () => {\n\n\n \n\n    return (\n        <div className='layer-selector' style= {{fontFamily:\"Roboto, sans-serif\"}}>\n\n            <h3> NBN coverage across Greater Sydney Region</h3>\n    \n\n               \n\n            <Legend />\n            <div style ={{marginTop:'10px', fontSize:'small'}}>\n            <b>% of dwellings connected to NBN network</b>\n            </div>            \n\n          \n            \n         \n\n           \n            \n            <BarChart />\n            <div>\n                <span style ={{fontSize:'8px'}}>Source: GSC Analysis 2021,<a href=\"https://data.gov.au/dataset/ds-dga-ed264f72-5fdf-4a54-8381-d35a10c7c85a/details?q=nbn\">ACMA</a>, ABS,DPIE</span>\n            </div>\n            <span style={{fontSize:\"10px\", color:'gray',lineHeight:'1.1em'}}>\n                Please contact <a href = \"mailto: data@gsc.nsw.gov.au\">data@gsc.nsw.gov.au</a> for more info\n                </span>\n           \n        \n           \n\n        </div>\n    );\n};\n\n\n\nexport default RightBar;","import {CartoLayer,CartoSQLLayer, MAP_TYPES, setDefaultCredentials,BASEMAP} from '@deck.gl/carto';\nimport {TextLayer} from '@deck.gl/layers';\nimport React, {useState, useCallback,useEffect} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { LEGEND_COLORS } from './barChart';\nimport axios from 'axios';\n\n//https://api.mapbox.com/styles/v1/abhijeetsharma94/ckwa9m3by9ah514qs4g24bu3m/tiles/256/%7Bz%7D/%7Bx%7D/%7By%7D@2x?access_token=pk.eyJ1IjoiYWJoaWplZXRzaGFybWE5NCIsImEiOiJja2c2ODFnb3QxMW41MnBubjJ1YzY3N3JqIn0.6mt7rGFgJyV69Vrytgbuog\n\nconst INITIAL_VIEW_STATE = {\n    latitude: -33.878197,\n    longitude: 151.148648,\n    zoom:10\n  };\n\n\n  const credentials = {\n    username: \"gsc-admin\",\n    apiKey: \"default_public\"\n  };\n \n  //const rows =  await fetchData();\n  //console.log(rows[0]); // {count: 7343}\n\nsetDefaultCredentials(credentials);\n\n\n\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiYnNuYXlhbiIsImEiOiJja3Ewczd3MW4wN3Z3MnVvNDNsenlzNnFsIn0.f8nk8yrxIeCKOlzIy1b-Pg'\n\nexport const POLYGON_COLORS ={\n    COLOR_YES: [0,0,0,0],\n    COLOR_NO :[248,15,54],\n    COLOR_GREEN :[16,196,118]\n  }\n  \nconst AccessMap = ()=> {\n\n  const [data ,setData] = useState([]);\n\nconst query ='SELECT ST_X(ST_Centroid(the_geom)) x, ST_Y(ST_CENTROID(the_geom)) y,district from districtboundary';\nuseEffect( ()=>{\n  const getData = async ()=> {\n    \n    const response  = await axios.get(`https://gsc-admin.carto.com/api/v2/sql?q=${encodeURIComponent(query)}`);\n    setData(response.data.rows.map(elm=>{\n      const d= {text:elm.district,position:[elm.x,elm.y]}\n      //console.log(d);\n      return {text:elm.district,position:[elm.x,elm.y]}\n    })\n    )\n    return response;\n    \n  }\n  getData();\n\n},[query])\n\nconsole.log('laoding..');\n\n\n  \nconst texLayer = new TextLayer({\n  id: 'text-layer',\n  data,\n  pickable: false,\n  sizeMinPixels:2,\n  sizeMaxPixels:15,\n\n  getSize: 20,\n  getAngle: 0,\n  getTextAnchor: 'middle',\n  getAlignmentBaseline: 'center',\n  getBackgroundColor:[255,255,255]\n});\n\n   \n     \n  \n    const layerAccess = new CartoLayer({\n      id:'access-uni',\n      type: MAP_TYPES.QUERY,\n      data: 'select the_geom_webmercator, network_infrastructure as type, quality from nbn_performance',\n    \n      getFillColor: object =>{\n        \n        return object.properties.quality==='Others'?[...LEGEND_COLORS[object.properties.quality],200]:[...LEGEND_COLORS[object.properties.quality],200]\n      },\n      getLineColor: object =>LEGEND_COLORS[object.properties.quality],\n      lineWidthMinPixels: .10,\n      pickable: true,\n      \n    });\n\n\n\n    const layerDistrict = new CartoLayer({\n      id:'district',\n      type: MAP_TYPES.QUERY,\n      data: `select the_geom_webmercator, district from \"gsc-admin\".districtboundary `,\n    \n      getFillColor: [0,0,0,0],\n      getLineColor: [35, 35, 35],\n      lineWidthMinPixels: 1.2,\n      \n      pickable: false,\n      \n    });\n\n    \n  \n    const getTooltip = ({object}) => {\n      if (!object) return false;\n      const {type,quality} = object.properties;\n      \n  \n      return {\n        html: `<div>Network infrastructure: ${type}</div>\n        <div>Performance: ${quality}</div>`,\n        \n        \n        style:{\n          \n          fontSize: '0.8em'\n         \n        }\n      }\n    };\n\n  \n    return (\n      <div>\n       \n        <DeckGL\n          width=\"100%\"\n          height=\"100%\"\n          initialViewState={INITIAL_VIEW_STATE}\n          getTooltip = {getTooltip}\n          controller={true}\n          layers={[layerAccess,layerDistrict,texLayer]}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle= {BASEMAP.PRISTON}//\"mapbox://styles/mapbox/dark-v9\"\n            mapboxApiAccessToken= {MAPBOX_ACCESS_TOKEN}\n            preventStyleDiffing\n          />\n        </DeckGL>\n      </div>\n    );\n  }\n\n\n  export default AccessMap;","import React from 'react';\n\n\nimport RightBar from './components/rightBar';\nimport AccessMap from './components/UniversityAccessMap';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      <AccessMap />\n    \n \n      <RightBar />\n\n \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}